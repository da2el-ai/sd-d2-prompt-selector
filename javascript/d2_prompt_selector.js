var p=Object.defineProperty;var u=(c,t,e)=>t in c?p(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var s=(c,t,e)=>(u(c,typeof t!="symbol"?t+"":t,e),e);class o{static baseButton(t,{size:e="sm",color:i="primary"}){const n=document.createElement("button");return n.classList.add(`gr-button-${e}`,`gr-button-${i}`,e,i),n.textContent=t,n}static openButton({onClick:t=()=>{}}){const e=o.baseButton("🔯タグを選択",{size:"sm",color:"secondary"});return e.classList.add("d2ps-open-button"),e.addEventListener("click",t),e}static psContainer(t=""){const e=document.createElement("div");return e.id=t,e.classList.add("d2ps-ps-container","tabs","gradio-tabs"),e}static negativeCheckbox(t,{onChange:e}){const i=document.createElement("input");i.setAttribute("type","checkbox"),i.addEventListener("change",()=>{e(i.checked)});const n=document.createElement("span");n.classList.add("d2ps-label__text"),n.textContent=t;const a=document.createElement("label");return a.classList.add("d2ps-label"),a.appendChild(i),a.appendChild(n),a}static tabContainer(){const t=document.createElement("div");return t.classList.add("d2ps-tab-nav","tab-nav"),t}static tabButton(t,{onClick:e=()=>{}}){const i=o.baseButton(t,{});return i.addEventListener("click",e),i.classList.add("d2ps-tab-button"),i}static tagField(){const t=document.createElement("div");return t.classList.add("d2ps-tag-field"),t}static tagButton(t,{onClick:e=()=>{},onRightClick:i=()=>{},color:n="primary"}){const a=o.baseButton(t,{color:n});return a.classList.add("d2ps-tag-button"),a.addEventListener("click",e),a.addEventListener("contextmenu",i),a}}class b{constructor(t,e){s(this,"button");s(this,"id");this.id=t,this.button=o.tabButton(t,{onClick:()=>{e(this.id)}})}setActive(t){this.button.setAttribute("data-active",t?"true":"false")}}class m{constructor(t){s(this,"tabButtons");s(this,"activeCategory");s(this,"onChange");this.onChange=t,this.tabButtons=[],this.activeCategory=""}createTabNavi(t,e){const i=Object.keys(e),n=Array.from(new Set([...t.sort,...i])),a=o.tabContainer();return n.forEach(r=>{const l=new b(r,()=>{this.$_clickTabButton(r)});this.tabButtons.push(l),a.appendChild(l.button)}),this.$_clickTabButton(n[0]),a}$_clickTabButton(t){this.activeCategory=t,this.tabButtons.forEach(e=>{e.setActive(e.id===t)}),this.onChange()}}class y{constructor(t,e,i){s(this,"onClick");s(this,"onRightClick");s(this,"categoryId","");s(this,"container");this.categoryId=t,this.onClick=e,this.onRightClick=i,this.container=o.tagField(),this.container.style.display="none"}createCategory(t){return this.$_createButtons(t,this.categoryId).forEach(e=>{this.container.appendChild(e)}),this.container}$_createButtons(t,e=""){return Array.isArray(t)?t.map(i=>this.$_createTagButton(i,i,"secondary")):Object.keys(t).map(i=>{const n=t[i],a=`${e}:${i}`;if(typeof n=="string")return this.$_createTagButton(i,n,"secondary");const r=o.tagField();r.classList.add("d2ps-tag-field--with-random"),r.appendChild(this.$_createTagButton(i,`@${a}@`));const l=o.tagField();return r.appendChild(l),this.$_createButtons(n,a).forEach(g=>{l.appendChild(g)}),r})}$_createTagButton(t,e,i="primary"){return o.tagButton(t,{onClick:a=>{a.preventDefault(),this.onClick(e,a.metaKey||a.ctrlKey)},onRightClick:a=>{a.preventDefault(),this.onRightClick(e,a.metaKey||a.ctrlKey)},color:i})}}class h{constructor(t="txt2img"){s(this,"AREA_ID_BASE","d2-prompt-selector-");s(this,"type");s(this,"visible");s(this,"toNegative");s(this,"tags");s(this,"config");s(this,"categories");s(this,"tabNavi");console.log("D2PSPromptSelectorUnit constructor",t),this.type=t,this.visible=!1,this.toNegative=!1,this.tags={},this.categories=[]}createControl(t){const e=o.openButton({onClick:()=>{this.changeVisible()}}),i=gradioApp().getElementById(`d2_ps_reload_button_${this.type}`);i.addEventListener("click",async()=>{await t()});const n=gradioApp().getElementById(`${this.type}_actions_column`),a=document.createElement("div");a.classList.add("d2ps-action-container"),a.appendChild(e),a.appendChild(i),n.appendChild(a)}init(t,e){console.log("init",this.type),this.tags=t,this.config=e;const i=this.$_getContainer();i!=null&&(i.remove(),this.categories=[]),gradioApp().getElementById(`${this.type}_toprow`).after(this.$_render())}changeVisible(){this.visible=!this.visible,this.$_getContainer().style.display=this.visible?"block":"none"}$_getContainer(){return console.log(`#${this.AREA_ID_BASE}${this.type}`),console.log(gradioApp().querySelector(`#${this.AREA_ID_BASE}${this.type}`)),gradioApp().querySelector(`#${this.AREA_ID_BASE}${this.type}`)}$_render(){const t=o.psContainer(`${this.AREA_ID_BASE}${this.type}`),e=o.negativeCheckbox("ネガティブプロンプトに入力（ctrl + クリックでも可）",{onChange:i=>{this.toNegative=i}});return t.appendChild(e),t.appendChild(this.$_renderTabNavi()),this.$_renderCategory(t),this.$_changeCategory(),t}$_renderTabNavi(){return this.tabNavi=new m(()=>{this.$_changeCategory()}),this.tabNavi.createTabNavi(this.config,this.tags)}$_changeCategory(){this.categories.forEach(t=>{this.tabNavi.activeCategory===t.categoryId?t.container.style.display="block":t.container.style.display="none"})}$_renderCategory(t){Object.keys(this.tags).forEach(e=>{const i=new y(e,(a,r=!1)=>{this.$_addTag(a,r)},(a,r=!1)=>{this.$_removeTag(a,r)}),n=i.createCategory(this.tags[e]);t.appendChild(n),this.categories.push(i)})}$_addTag(t,e=!1){const i=e||this.toNegative?`${this.type}_neg_prompt`:`${this.type}_prompt`;console.log("add tag",i),console.log(gradioApp().getElementById(i));const n=gradioApp().getElementById(i).querySelector("textarea");n.value.trim()===""?n.value=t:n.value.trim().endsWith(",")?n.value+=" "+t:n.value+=", "+t,updateInput(n)}$_removeTag(t,e=!1){const i=e||this.toNegative?`${this.type}_neg_prompt`:`${this.type}_prompt`,n=gradioApp().getElementById(i).querySelector("textarea");if(n.value.trimStart().startsWith(t)){const a=n.value.match(new RegExp(`${t.replace(/[-\/\\^$*+?.()|\[\]{}]/g,"\\$&")},*`));n.value=n.value.replace(a[0],"").trimStart()}else n.value=n.value.replace(`, ${t}`,"");updateInput(n)}}class C{constructor(){s(this,"tags");s(this,"config");s(this,"t2iPromptSelector");s(this,"i2iPromptSelector");this.t2iPromptSelector=new h("txt2img"),this.i2iPromptSelector=new h("img2img"),this.tags={}}createControl(){this.t2iPromptSelector.createControl(this.getTags),this.i2iPromptSelector.createControl(this.getTags)}async init(){await this.getTags(),this.t2iPromptSelector.init(this.tags,this.config),this.i2iPromptSelector.init(this.tags,this.config)}changeVisible(){this.t2iPromptSelector.changeVisible(),this.i2iPromptSelector.changeVisible()}async getTags(){const e=await(await fetch(`/d2ps/tags?${new Date().getTime()}`)).json();this.config=e.__config__,delete e.__config__,this.tags=e,console.log("getTags",this.config,this.tags)}}const d=new C;onOptionsChanged(()=>{console.log("onOptionsChanged"),d.init()});onUiLoaded(()=>{console.log("onUiLoaded"),d.createControl(),d.init()});
